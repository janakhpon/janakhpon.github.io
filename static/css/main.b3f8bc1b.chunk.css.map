{"version":3,"sources":["shared/_fonts.scss","main.scss"],"names":[],"mappings":"AAAA,WACI,oBAAqB,CACrB,2CAA8C,CAC9C,eAAmB,CACnB,iBAAkB,CAItB,WACI,oBAAqB,CACrB,wCAA2C,CAC3C,eAAiB,CACjB,iBAAkB,CAItB,WACI,oBAAqB,CACrB,yCAA4C,CAC5C,mBAAoB,CACpB,iBAAkB,CAItB,WACI,oBAAqB,CACrB,0CAA6C,CAC7C,eAAmB,CACnB,iBAAkB,CC1BtB,YAGI,uBAAwB,CAC3B,aAiBG,cAAe,CACf,kBAAmB,CACnB,WAPS,CAQT,UATQ,CAUR,aARwB,CASxB,qBAA0B,CAN9B,mBASQ,iBAAkB,CAClB,SAAU,CACV,OAAQ,CACR,QAAS,CACZ,QAID,WAAY,CACZ,YAAa,CACb,iCAAkC,CAClC,sBAAA,CAAA,cAAe,CAJnB,cAQQ,YAAS,CAAK,iBACC,CAAG,kBACN,CAAO,aACN,CAAC,iCAAA,CAAA,yBACF,CAAc,sBAKtB,iCACmB,CAAW,4BAE1B,YACK,CAAA,wBACS","file":"main.b3f8bc1b.chunk.css","sourcesContent":["@font-face {\n    font-family: 'Roboto';\n    src: url('/static/fonts/FiraCode-Regular.ttf');\n    font-weight: normal;\n    font-style: normal;\n}\n\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('/static/fonts/FiraCode-Bold.ttf');\n    font-weight: bold;\n    font-style: normal;\n}\n\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('/static/fonts/FiraCode-Light.ttf');\n    font-weight: lighter;\n    font-style: normal;\n}\n\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('/static/fonts/FiraCode-Retina.ttf');\n    font-weight: normal;\n    font-style: italic;\n}","@import './shared/fonts';\n\nhtml,\nbody,\n* {\n    font-family: 'Fira Code';\n}\n\n//HOW THIS WORKS:\n//The 0fr column takes up no space (yet).\n//The two 1fr columns are the toggle nub(??), and the ~visible~ empty space.\n//When checked, the left column becomes 1fr and the right column becomes 0fr, creating the effect of the nub moving.\n\n//====================\n\n//Change width or padding values freely :)\n//But for the 'nub' to look perfectly circular (at 1fr, i.e. 50%), the toggle's height must be half its width, plus the padding value\n$width: 55px;\n$padding: 2px;\n$height: $width / 2+$padding;\n\n//toggle code begins!\n.switch-wrap {\n    cursor: pointer;\n    background: #15273b;\n    padding: $padding;\n    width: $width;\n    height: $height;\n    border-radius: $height / 2;\n\n    input {\n        position: absolute;\n        opacity: 0;\n        width: 0;\n        height: 0;\n    }\n}\n\n.switch {\n    height: 100%;\n    display: grid;\n    grid-template-columns: 0fr 1fr 1fr;\n    transition: .2s;\n\n    //ICYMI, pseudo elements are treated as grid items\n    &::after {\n        content: 'ðŸŒž';\n        border-radius: 50%;\n        background: #97D1D1;\n        grid-column: 2;\n        transition: background .2s;\n    }\n}\n\ninput:checked {\n    +.switch {\n        grid-template-columns: 1fr 1fr 0fr;\n\n        &::after {\n            content: 'ðŸŒ™';\n            background-color: #2e4482;\n        }\n    }\n}"]}